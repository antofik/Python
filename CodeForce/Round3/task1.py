# coding=utf-8
"""
A. Кратчайший путь короля
ограничение по времени на тест:1 second
ограничение по памяти на тест:64 megabytes
ввод:standard input
вывод:standard output

Одинокий король остался совсем один на шахматной доске. Несмотря на одиночество, он вовсе не унывает — ведь ему еще надо сделать так много дел государственной важности. Например, ему надо совершить официальный визит в клетку t. Так как король не привык терять попусту время, он хочет добраться от своего местоположения s до клетки t за наименьшее число ходов. Помогите ему это сделать.
 Король за один ход может переместиться на любую клетку, которая по стороне или углу граничит с текущей (их в общем случае 8).

Входные данные

В первой строке входных данных заданы шахматные координаты клетки s, а во второй — клетки t.

Шахматные координаты состоят из двух символов, один из которых это строчная буква латинского алфавита (от a до h), а второй — цифра от 1 до 8.
Выходные данные

В первую строку выведите n — минимальное число ходов короля. Далее в n строк выведите сами ходы. Каждый ход описывается одной из восьми строк: L, R, U, D, LU, LD, RU или RD.

L, R, U, D, соответственно, означают ходы влево, вправо, вверх и вниз (согласно рисунку), двухбуквенные обозначения соответствуют диагональным ходам. Если решений несколько, выведите любое.
"""
from sys import stdin

start = stdin.readline()
end = stdin.readline()

values = dict(a=1, b=2, c=3, d=4, e=5, f=6, g=7, h=8)


def convert(value):
    a, b = list(value.strip())
    return values[a.lower()], int(b)


sh, sv = convert(start)
eh, ev = convert(end)
h = eh - sh
v = ev - sv
result = []
hl = 'L' if h < 0 else 'R'
vl = 'D' if v < 0 else 'U'
h = abs(h)
v = abs(v)

if h >= v:
    result.extend([hl + vl] * v)
    result.extend([hl] * (h - v))
else:
    result.extend([hl + vl] * h)
    result.extend([vl] * (v - h))

print len(result)
for i in result:
    print i