# coding=utf-8
"""
A. Победитель
ограничение по времени на тест:1 second
ограничение по памяти на тест:64 megabytes
ввод:standard input
вывод:standard output

Победитель популярной в Берляндии карточной игры «Берлоггинг» определяется по следующим правилам. Если на момент окончания игры существует только один игрок, набравший максимальное количество очков, то он и становится победителем.

Ситуация осложняется, если таких игроков несколько. Каждый кон игры некоторый игрок выигрывает или проигрывает некоторое количество очков. В записи о ходе игры это обозначается строкой «name score», где name это имя игрока, а score целое число обозначающее количество заработанных очков данным игроком. Если score — отрицательное число, это обозначает, что игрок проиграл в этом коне. Так вот, если на конец игры несколько игроков набрали максимум очков (пусть это число равно m), то выигрывает тот из них, кто первым набрал как минимум m очков. Перед началом игры у каждого игрока 0 очков. Гарантируется, что на момент окончания игры хотя бы у одного игрока положительное число очков.
Входные данные

В первой строке записано целое число n (1 ≤ n ≤ 1000), n — количество конов сыгранной игры. Далее в n строках идут описания конов, в формате «name score» в хронологическом порядке, где name это строка из строчных букв латинского алфавита длины от 1 до 32, а score это целое число от -1000 до 1000 включительно.
Выходные данные

Выведите имя победителя игры «Берлоггинг».
Примеры тестов
Входные данные
3
mike 3
andrew 5
mike 2
Выходные данные
andrew
Входные данные
3
andrew 3
andrew 2
mike 5
Выходные данные
andrew
"""
from collections import defaultdict
from sys import stdin

stdin.readline()

rounds = [(name, int(score)) for name, score in map(str.split, stdin.readlines())]
scores = defaultdict(int)
for name, score in rounds:
    scores[name] += score

m = max(scores.values())

winners = set()
for name in scores:
    if scores[name] == m:
        winners.add(name)
if len(winners) == 1:
    print winners.pop()
else:
    scores = defaultdict(int)
    for name, score in rounds:
        if name not in winners:
            continue
        scores[name] += score
        if scores[name] >= m:
            print name
            break

